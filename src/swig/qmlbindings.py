# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_qmlbindings', [dirname(__file__)])
        except ImportError:
            import _qmlbindings
            return _qmlbindings
        if fp is not None:
            try:
                _mod = imp.load_module('_qmlbindings', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _qmlbindings = swig_import_helper()
    del swig_import_helper
else:
    import _qmlbindings
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def qtCreateQmlBindings(*args):
  return _qmlbindings.qtCreateQmlBindings(*args)
qtCreateQmlBindings = _qmlbindings.qtCreateQmlBindings

def qtDestroyQmlBindings(*args):
  return _qmlbindings.qtDestroyQmlBindings(*args)
qtDestroyQmlBindings = _qmlbindings.qtDestroyQmlBindings

def qtSetBindingsObjectIdentityType(*args):
  return _qmlbindings.qtSetBindingsObjectIdentityType(*args)
qtSetBindingsObjectIdentityType = _qmlbindings.qtSetBindingsObjectIdentityType

def qtSetBindingsUri(*args):
  return _qmlbindings.qtSetBindingsUri(*args)
qtSetBindingsUri = _qmlbindings.qtSetBindingsUri

def qtSetBindingsVersion(*args):
  return _qmlbindings.qtSetBindingsVersion(*args)
qtSetBindingsVersion = _qmlbindings.qtSetBindingsVersion

def qtCreateClass(*args):
  return _qmlbindings.qtCreateClass(*args)
qtCreateClass = _qmlbindings.qtCreateClass

def qtFinalizeClass(*args):
  return _qmlbindings.qtFinalizeClass(*args)
qtFinalizeClass = _qmlbindings.qtFinalizeClass

def qtCreateProperty(*args):
  return _qmlbindings.qtCreateProperty(*args)
qtCreateProperty = _qmlbindings.qtCreateProperty
QtQObjectCompanion = _qmlbindings.QtQObjectCompanion
QuickPaintedItemCompanion = _qmlbindings.QuickPaintedItemCompanion
QtForeginWindowCompanion = _qmlbindings.QtForeginWindowCompanion

def qtSetClassCompanionType(*args):
  return _qmlbindings.qtSetClassCompanionType(*args)
qtSetClassCompanionType = _qmlbindings.qtSetClassCompanionType

def qtCreateObject(*args):
  return _qmlbindings.qtCreateObject(*args)
qtCreateObject = _qmlbindings.qtCreateObject

def qtDestroyObject(*args):
  return _qmlbindings.qtDestroyObject(*args)
qtDestroyObject = _qmlbindings.qtDestroyObject

def qtWriteProperty(*args):
  return _qmlbindings.qtWriteProperty(*args)
qtWriteProperty = _qmlbindings.qtWriteProperty

def qtReadProperty(*args):
  return _qmlbindings.qtReadProperty(*args)
qtReadProperty = _qmlbindings.qtReadProperty

def qtPropertyChanged(*args):
  return _qmlbindings.qtPropertyChanged(*args)
qtPropertyChanged = _qmlbindings.qtPropertyChanged

def qtMain(*args):
  return _qmlbindings.qtMain(*args)
qtMain = _qmlbindings.qtMain

def qtMainSimple(*args):
  return _qmlbindings.qtMainSimple(*args)
qtMainSimple = _qmlbindings.qtMainSimple

def qtValueType(*args):
  return _qmlbindings.qtValueType(*args)
qtValueType = _qmlbindings.qtValueType

def qtValueTypeName(*args):
  return _qmlbindings.qtValueTypeName(*args)
qtValueTypeName = _qmlbindings.qtValueTypeName

def qtValueCopy(*args):
  return _qmlbindings.qtValueCopy(*args)
qtValueCopy = _qmlbindings.qtValueCopy

def qtValueFree(*args):
  return _qmlbindings.qtValueFree(*args)
qtValueFree = _qmlbindings.qtValueFree

def qtValueToInt(*args):
  return _qmlbindings.qtValueToInt(*args)
qtValueToInt = _qmlbindings.qtValueToInt

def qtValueFromInt(*args):
  return _qmlbindings.qtValueFromInt(*args)
qtValueFromInt = _qmlbindings.qtValueFromInt
# This file is compatible with both classic and new-style classes.


